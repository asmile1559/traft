syntax = "proto3";

package raft;

option go_package = "github.com/asmile1559/traft/internal/apis/raft;raftpb";

service TRaftService {
  rpc RequestVote(RequestVoteReq) returns (RequestVoteResp) {};
  rpc AppendEntries(AppendEntriesReq) returns (AppendEntriesResp) {};
  rpc InstallSnapshot(InstallSnapshotReq) returns (InstallSnapshotResp) {};
}

message RequestVoteReq {
  uint64 term = 1;
  string candidate_id = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
}

message RequestVoteResp {
  uint64 term = 1;
  bool vote_granted = 2;
}

message LogEntry {
  uint64 index = 1;
  uint64 term = 2;
  bytes data = 3;
}

message AppendEntriesReq {
  uint64 term = 1;
  string leader_id = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  uint64 leader_commit = 6;
}

message AppendEntriesResp {
  uint64 term = 1;
  bool success = 2;
  uint64 match_index = 3;
  uint64 conflict_index = 4;
  uint64 conflict_term = 5;
}

message Snapshot {
  uint64 last_included_index = 1;
  uint64 last_included_term = 2;
  bytes data = 3;
}

message InstallSnapshotReq {
  uint64 term = 1;
  string leader_id = 2;
  Snapshot snapshot = 3;
}

message InstallSnapshotResp {
  uint64 term = 1;
  bool success = 2;
}
